summarize = dplyr::summarize
#over all performance
basic = totalData %>% filter(keys>=0)%>% group_by(subID)%>% summarize(num_noresposnes = sum(keys==-1), num_same_resp = sum(keys==1), num_diff_resp = sum(keys==0), num_same_trials =sum(SameDiff=="S"), num_diff_trials = sum(SameDiff=="D"),
hit = sum(keys==1&SameDiff=="S"),
fa= sum(keys==1&SameDiff=="D"),
cr = sum(keys==0&SameDiff=="D"),
miss = sum(keys==0&SameDiff=="S"),
HitRate =sum(keys==1&SameDiff=="S")/sum(SameDiff=="S"),
FARate = sum(keys==1&SameDiff=="D")/sum(SameDiff=="D"),
CRRate = sum(keys==0&SameDiff=="D")/sum(SameDiff=="D"),
MissRate = sum(keys==0&SameDiff=="S")/sum(SameDiff=="S"),
adjFARate = 1/(2*sum(SameDiff=="D")),
adjHitRate = 1-(1/(2*sum(SameDiff=="S"))),
d_p = qnorm(HitRate)-qnorm(FARate),
adjd_p=qnorm(adjHitRate)-qnorm(adjFARate))
head(basic)
basic$d_p[basic$FARate==0 | basic$HitRate==1]=
basic$adjd_p[basic$FARate==0 | basic$HitRate==1]
#Plotting
basic_longform = gather(basic, response_type, number_resp, HitRate,FARate,CRRate,MissRate)
head(basic_longform)
ggplot(basic_longform, aes(x = response_type, y = number_resp, color = response_type))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
labs(title="Proportaion response type", x = "response type", y = "proportion")+
plotformat
#d-p
ggplot(basic, aes(x = subID, y = d_p, color = as.factor(subID)))+
geom_point(size=3)+
labs(title="d prime", x = "subject", y = "d prime")+
plotformat
ggplot(basic,aes(d_p))+
geom_histogram()+
labs(title="d prime histogram", x = "d prime", y = "counts")+
plotformat
remain_dp = basic$subID[basic$d_p>d_p_thre]
sprintf("remove d prime lower than %f. Remain subjects: %i",d_p_thre, length(remain_dp))
totalData = totalData %>%filter(subID%in%remain_dp)
summarize = dplyr::summarize
#performance by sequence (first and second half of the experiment)
##
basicSequence = totalData %>% filter(keys>=0)%>% group_by(subID,sequence)%>% summarize(num_noresposnes = sum(keys==-1), num_same_resp = sum(keys==1), num_diff_resp = sum(keys==0), num_same_trials =sum(SameDiff=="S"), num_diff_trials = sum(SameDiff=="D"),
hit = sum(keys==1&SameDiff=="S"),
fa= sum(keys==1&SameDiff=="D"),
cr = sum(keys==0&SameDiff=="D"),
miss = sum(keys==0&SameDiff=="S"),
HitRate =sum(keys==1&SameDiff=="S")/sum(SameDiff=="S"),
FARate = sum(keys==1&SameDiff=="D")/sum(SameDiff=="D"),
CRRate = sum(keys==0&SameDiff=="D")/sum(SameDiff=="D"),
MissRate = sum(keys==0&SameDiff=="S")/sum(SameDiff=="S"),
adjFARate = 1/(2*sum(SameDiff=="D")),
adjHitRate = 1-(1/(2*sum(SameDiff=="S"))),
d_p = qnorm(HitRate)-qnorm(FARate),
adjd_p=qnorm(adjHitRate)-qnorm(adjFARate))
basicSequence
basicSequence$d_p[basicSequence$FARate==0 | basicSequence$HitRate==1]=
basicSequence$adjd_p[basicSequence$FARate==0 | basicSequence$HitRate==1]
#Plotting
basicSequence_longform = gather(basicSequence, response_type, response_rate, HitRate,FARate,CRRate,MissRate)
head(basicSequence_longform)
ggplot(basicSequence_longform, aes(x = response_type, y = response_rate, color = response_type))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
facet_wrap(~sequence)+
labs(title="Proportaion response type", x = "response type", y = "proportion")+
theme_facet()
#d-p
ggplot(basicSequence_longform, aes(x = subID, y = d_p, color = as.factor(subID)))+
geom_point(size=3)+
facet_wrap(~sequence)+
labs(title="d prime", x = "subject", y = "d prime")+
theme_facet()
ggplot(basicSequence_longform,aes(d_p))+
geom_histogram()+
facet_wrap(~sequence)+
labs(title="d prime histogram", x = "d prime", y = "counts")+
theme_facet()
summarize = dplyr::summarize
##########
basicFeature = totalData %>% filter(keys>=0, WAfeature=="W")%>% group_by(subID,FimgFeature)%>% summarize(num_noresposnes = sum(keys==-1), num_same_resp = sum(keys==1), num_diff_resp = sum(keys==0),
num_same_trials =sum(SameDiff=="S"), num_diff_trials = sum(SameDiff=="D"),
hit = sum(keys==1&SameDiff=="S"),
fa= sum(keys==1&SameDiff=="D"),
cr = sum(keys==0&SameDiff=="D"),
miss = sum(keys==0&SameDiff=="S"),
HitRate =sum(keys==1&SameDiff=="S")/sum(SameDiff=="S"),
FARate = sum(keys==1&SameDiff=="D")/sum(SameDiff=="D"),
CRRate = sum(keys==0&SameDiff=="D")/sum(SameDiff=="D"),
MissRate = sum(keys==0&SameDiff=="S")/sum(SameDiff=="S"),
adjFARate = 1/(2*sum(SameDiff=="D")),
adjHitRate = 1-(1/(2*sum(SameDiff=="S"))),
d_p = qnorm(HitRate)-qnorm(FARate),
adjd_p=qnorm(adjHitRate)-qnorm(adjFARate))
basicFeature$d_p[basicFeature$FARate==0 | basicFeature$HitRate==1]=
basicFeature$adjd_p[basicFeature$FARate==0 | basicFeature$HitRate==1]
###
basicFeature_longform = gather(basicFeature, response_type, number_resp, HitRate,FARate,CRRate,MissRate)
head(basicFeature_longform)
ggplot(basicFeature_longform, aes(x = response_type, y = number_resp, color = response_type))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
facet_wrap(~FimgFeature)+
labs(title="Proportaion response type by feature", x = "response type", y = "proportion")+
theme_facet()
ggplot(basicFeature, aes(x = subID, y = d_p, group = FimgFeature, color = FimgFeature))+
geom_point(size=3)+
facet_wrap(~FimgFeature)+
plotformat
###########
basicFeatureSequence = totalData %>% filter(keys>=0, WAfeature=="W")%>% group_by(subID,FimgFeature,sequence)%>% summarize(num_noresposnes = sum(keys==-1), num_same_resp = sum(keys==1), num_diff_resp = sum(keys==0),                      num_same_trials =sum(SameDiff=="S"), num_diff_trials = sum(SameDiff=="D"),
hit = sum(keys==1&SameDiff=="S"),
fa= sum(keys==1&SameDiff=="D"),
cr = sum(keys==0&SameDiff=="D"),
miss = sum(keys==0&SameDiff=="S"),
HitRate =sum(keys==1&SameDiff=="S")/sum(SameDiff=="S"),
FARate = sum(keys==1&SameDiff=="D")/sum(SameDiff=="D"),
CRRate = sum(keys==0&SameDiff=="D")/sum(SameDiff=="D"),
MissRate = sum(keys==0&SameDiff=="S")/sum(SameDiff=="S"),
adjFARate = 1/(2*sum(SameDiff=="D")),
adjHitRate = 1-(1/(2*sum(SameDiff=="S"))),
d_p = qnorm(HitRate)-qnorm(FARate),
adjd_p=qnorm(adjHitRate)-qnorm(adjFARate))
##adjust hit/fa rate
##FArate ==0 --> 1/(2N)
##Hitrate ==1 --> 1-1/(2N)
basicFeatureSequence$d_p[basicFeatureSequence$FARate==0 | basicFeatureSequence$HitRate==1]=
basicFeatureSequence$adjd_p[basicFeatureSequence$FARate==0 | basicFeatureSequence$HitRate==1]
###
basicFeatureSequence_longform = gather(basicFeatureSequence, response_type, number_resp, HitRate,FARate,CRRate,MissRate)
head(basicFeatureSequence_longform)
ggplot(basicFeatureSequence_longform, aes(x = response_type, y = number_resp, color = response_type))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
facet_wrap(sequence~FimgFeature)+
labs(title="Proportaion response type by feature", x = "response type", y = "proportion")+
theme_facet()
ggplot(basicFeatureSequence, aes(x = subID, y = d_p, group = FimgFeature, color = FimgFeature))+
geom_point(size=3)+
facet_wrap(sequence~FimgFeature)+
theme_facet()
summarize = dplyr::summarize
totalData$level_diff = factor(totalData$level_diff)
basicLevel = totalData %>% filter(keys>=0,WAfeature=="W")%>% group_by(subID,level_diff)%>%
summarize(num_noresposnes = sum(keys==-1), num_same_resp = sum(keys==1), num_diff_resp = sum(keys==0),
num_same_trials =sum(SameDiff=="S"), num_diff_trials = sum(SameDiff=="D"),
hit = sum(keys==1&SameDiff=="S"),
fa= sum(keys==1&SameDiff=="D"),
cr = sum(keys==0&SameDiff=="D"),
miss = sum(keys==0&SameDiff=="S"),
HitRate =sum(keys==1&SameDiff=="S")/sum(SameDiff=="S"),
FARate = sum(keys==1&SameDiff=="D")/sum(SameDiff=="D"),
CRRate = sum(keys==0&SameDiff=="D")/sum(SameDiff=="D"),
MissRate = sum(keys==0&SameDiff=="S")/sum(SameDiff=="S"))
####
basicLevel_longform = gather(basicLevel, response_type, resp_rate, HitRate,FARate,CRRate,MissRate)
head(basicLevel_longform)
ggplot(basicLevel_longform, aes(x = response_type, y = resp_rate, color = response_type))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
facet_wrap(~level_diff,nrow = 1)+
labs(title="Proportaion response type by difficulty level", x = "response type", y = "proportion")+
theme_facet()
###########
basicLevelFeature = totalData %>% filter(keys>=0,WAfeature=="W")%>% group_by(subID,level_diff,FimgFeature)%>%
summarize(num_noresposnes = sum(keys==-1), num_same_resp = sum(keys==1), num_diff_resp = sum(keys==0),
num_same_trials =sum(SameDiff=="S"), num_diff_trials = sum(SameDiff=="D"),
hit = sum(keys==1&SameDiff=="S"),
fa= sum(keys==1&SameDiff=="D"),
cr = sum(keys==0&SameDiff=="D"),
miss = sum(keys==0&SameDiff=="S"),
HitRate =sum(keys==1&SameDiff=="S")/sum(SameDiff=="S"),
FARate = sum(keys==1&SameDiff=="D")/sum(SameDiff=="D"),
CRRate = sum(keys==0&SameDiff=="D")/sum(SameDiff=="D"),
MissRate = sum(keys==0&SameDiff=="S")/sum(SameDiff=="S"))
basicLevelFeature_longform = gather(basicLevelFeature, response_type, resp_rate, HitRate,FARate,CRRate,MissRate)
head(basicLevelFeature_longform)
ggplot(basicLevelFeature_longform, aes(x = response_type, y = resp_rate, color = response_type))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
facet_wrap(FimgFeature~level_diff,nrow = 3,strip.position = "bottom")+
labs(title="Proportaion response type by difficulty level", x = "level diff", y = "proportion")+
theme_facet()
###########
basicLevelFeatureSequence = totalData %>% filter(keys>=0,WAfeature=="W")%>% group_by(subID,level_diff,FimgFeature,sequence)%>%
summarize(num_noresposnes = sum(keys==-1), num_same_resp = sum(keys==1), num_diff_resp = sum(keys==0),
num_same_trials =sum(SameDiff=="S"), num_diff_trials = sum(SameDiff=="D"),
hit = sum(keys==1&SameDiff=="S"),
fa= sum(keys==1&SameDiff=="D"),
cr = sum(keys==0&SameDiff=="D"),
miss = sum(keys==0&SameDiff=="S"),
HitRate =sum(keys==1&SameDiff=="S")/sum(SameDiff=="S"),
FARate = sum(keys==1&SameDiff=="D")/sum(SameDiff=="D"),
CRRate = sum(keys==0&SameDiff=="D")/sum(SameDiff=="D"),
MissRate = sum(keys==0&SameDiff=="S")/sum(SameDiff=="S"))
basicLevelFeatureSequence_longform = gather(basicLevelFeatureSequence, response_type, resp_rate, HitRate,FARate,CRRate,MissRate)
head(basicLevelFeatureSequence_longform)
ggplot(subset(basicLevelFeatureSequence_longform,sequence == "S1"), aes(x = response_type, y = resp_rate, color = response_type))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
facet_wrap(FimgFeature~level_diff,nrow = 3,strip.position = "bottom")+
labs(title="Proportaion response type by difficulty level - first seq", x = "level diff", y = "proportion")+
theme_facet()
ggplot(subset(basicLevelFeatureSequence_longform,sequence == "S2"), aes(x = response_type, y = resp_rate, color = response_type))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
facet_wrap(FimgFeature~level_diff,nrow = 3,strip.position = "bottom")+
labs(title="Proportaion response type by difficulty level - sec seq", x = "level diff", y = "proportion")+
theme_facet()
library(dplyr)
library(plyr)
library(tidyr)
library(ggplot2)
library(stringr)
#plotting format
plotformat = theme(plot.title = element_text(face="bold",size = 17,hjust = 0.5),axis.title = element_text(face = "bold",size =15), axis.text.x = element_text(size=12), axis.title.y=element_text(size=14))+theme_bw()
theme_facet = function(base_size = 14, base_family = "Helvetica") {
# Starts with theme_grey and then modify some parts
theme_bw(base_size = base_size, base_family = base_family) %+replace%
theme(
strip.background = element_blank(),
strip.text.x = element_text(size = 10),
strip.text.y = element_text(size = 10),
axis.text.x = element_blank(),
axis.text.y = element_text(size=12,hjust=1),
axis.ticks =  element_blank(), #element_line(colour = "black"),
axis.title.x= element_text(size=12),
axis.title.y= element_text(size=12,angle=90),
panel.background = element_blank(),
panel.border =element_blank(),
panel.grid.minor = element_blank(),
panel.spacing = unit(0.5, "lines"),
plot.background = element_blank(),
plot.margin = unit(c(0.3,  0.3, 0.3, 0.3), "lines"),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5)
)
}
#color
Features = c('#deebf7','#9ecae1','#6baed6','#4292c6','#08519c','#08306b',
'#fee6ce','#fdae6b','#fd8d3c','#f16913','#a63603','#7f2704',
'#f0f0f0','#bdbdbd','#969696','#737373','#252525','#000000',
'#efedf5','#bcbddc','#9e9ac8','#807dba','#54278f','#3f007d')
dataPath = '/Volumes/Macintosh HD/Users/Pam_sf_wang/Documents/Perceptual_learning_project/Calibration/Calibration_analysis/SONA_analysis/';
data_new_fname = "SONAdata_newDesignV9.csv"
demographic_new_fname = "SONAdemographic_newDesignV9.csv"
postsurvey_new_fname = "SONApostsurvey_newDesignV9.csv"
d_p_thre = 0.5
trial_thre = 77
age_thre = 35
totalData = read.csv(paste0(dataPath,data_new_fname),header = T)
totalData = totalData[,-1]
demographic_information = read.csv(paste0(dataPath,demographic_new_fname),header = T)
postsurvey = read.csv(paste0(dataPath,postsurvey_new_fname),header = T)
summarize = dplyr::summarize
#check basic performance -- remove non-responding subjects
temp = totalData %>% group_by(subID) %>% summarize(num_noresponses= sum(keys==-1), trialNum = length(subID))
sprintf("total trial number: %i; Number of subjects %i",temp$trialNum[1],dim(temp)[1])
temp
ggplot(temp, aes( y= num_noresponses, x= subID))+
geom_point()+
geom_hline(yintercept=trial_thre, linetype="dashed", color = "red", size=0.5)+
labs(title="No responses", x ="subjuect ID", y = "number of no responses")+
plotformat
#no response subjects
removeSub = temp$subID[temp$num_noresponses>trial_thre]
totalData = totalData%>%filter(!subID %in% removeSub)
demographic_information = demographic_information%>%filter(!SubID %in%removeSub)
sprintf("remove no response subjects: %i",length(removeSub))
genderCount = table(demographic_information$Gender)
EthnicityCount = table(demographic_information$Ethnicity)
RaceCount = table(demographic_information$Race)
genderCount
EthnicityCount
RaceCount
summary(demographic_information$Age)
ggplot(demographic_information, aes(demographic_information$Age)) +
geom_histogram()+
geom_vline(xintercept=median(demographic_information$Age), linetype="dashed", color = "red", size=0.5)+
#geom_vline(xintercept=mean(demographic_information$Age), linetype="dashed", color = "blue", size=0.5)+
labs(title = "Age Distribution",x = "age", y = "counts")+
plotformat
#select right age
remainSub = demographic_information$SubID[demographic_information$Age<=age_thre]
demographic_information_remain = filter(demographic_information,SubID%in%remainSub)
summary(demographic_information_remain$Age)
ggplot(demographic_information_remain, aes(Age)) +
geom_histogram()+
geom_vline(xintercept=median(demographic_information_remain$Age), linetype="dashed", color = "red", size=0.5)+
#geom_vline(xintercept=mean(demographic_information$Age), linetype="dashed", color = "blue", size=0.5)+
labs(title = "Age Distribution",x = "age", y = "counts")+
plotformat
genderCount = table(demographic_information_remain$Gender)
EthnicityCount = table(demographic_information_remain$Ethnicity)
RaceCount = table(demographic_information_remain$Race)
genderCount
EthnicityCount
RaceCount
#remove subjects who are outside of the age range
totalData = totalData %>%filter(subID %in%remainSub)
temp = totalData %>% group_by(subID) %>% summarize(num_noresponses= sum(keys==-1), trialNum = length(subID))
sprintf("total trial number: %i; Number of subjects %i",temp$trialNum[1],dim(temp)[1])
temp
ggplot(temp, aes( y= num_noresponses, x= subID))+
geom_point()+
geom_hline(yintercept=trial_thre, linetype="dashed", color = "red", size=0.5)+
labs(title="No responses", x ="subjuect ID", y = "number of no responses")+
plotformat
summarize = dplyr::summarize
totalData$FimgFeature =0
totalData$SimgFeature =0
totalData$FimgFeature[totalData$Fimg %in%c(1,2,3,4,5,6,7)]="F1"
totalData$FimgFeature[totalData$Fimg %in%c(8,9,10,11,12,13,14)]="F2"
totalData$FimgFeature[totalData$Fimg %in%c(15,16,17,18,19,20,21)]="F3"
totalData$SimgFeature[totalData$Simg %in%c(1,2,3,4,5,6,7)]="F1"
totalData$SimgFeature[totalData$Simg %in%c(8,9,10,11,12,13,14)]="F2"
totalData$SimgFeature[totalData$Simg %in%c(15,16,17,18,19,20,21)]="F3"
#trial conditions: different:D; same:S (same as keys)
totalData$SameDiff = NA;
totalData$SameDiff[totalData$Fimg==totalData$Simg]="S";
totalData$SameDiff[totalData$Fimg!=totalData$Simg]="D";
#trial conditions: within/across feature (W/A)
totalData$WAfeature = NA;
totalData$WAfeature[totalData$FimgFeature==totalData$SimgFeature]="W"
totalData$WAfeature[totalData$FimgFeature!=totalData$SimgFeature]="A"
#trial conditions: level
totalData$Fimglevel[totalData$Fimg %in% c(1,8,15)]=1
totalData$Fimglevel[totalData$Fimg %in% c(2,9,16)]=2
totalData$Fimglevel[totalData$Fimg %in% c(3,10,17)]=3
totalData$Fimglevel[totalData$Fimg %in% c(4,11,18)]=4
totalData$Fimglevel[totalData$Fimg %in% c(5,12,19)]=5
totalData$Fimglevel[totalData$Fimg %in% c(6,13,20)]=6
totalData$Fimglevel[totalData$Fimg %in% c(7,14,21)]=7
totalData$Simglevel[totalData$Simg %in% c(1,8,15)]=1
totalData$Simglevel[totalData$Simg %in% c(2,9,16)]=2
totalData$Simglevel[totalData$Simg %in% c(3,10,17)]=3
totalData$Simglevel[totalData$Simg %in% c(4,11,18)]=4
totalData$Simglevel[totalData$Simg %in% c(5,12,19)]=5
totalData$Simglevel[totalData$Simg %in% c(6,13,20)]=6
totalData$Simglevel[totalData$Simg %in% c(7,14,21)]=7
totalData$level_diff = abs(totalData$Fimglevel-totalData$Simglevel)
#run - first/second sequences
totalData$sequence[totalData$run %in% c(1,2,3)]="S1"
totalData$sequence[totalData$run %in% c(4,5,6)]="S2"
summarize = dplyr::summarize
#over all performance
basic = totalData %>% filter(keys>=0)%>% group_by(subID)%>% summarize(num_noresposnes = sum(keys==-1), num_same_resp = sum(keys==1), num_diff_resp = sum(keys==0), num_same_trials =sum(SameDiff=="S"), num_diff_trials = sum(SameDiff=="D"),
hit = sum(keys==1&SameDiff=="S"),
fa= sum(keys==1&SameDiff=="D"),
cr = sum(keys==0&SameDiff=="D"),
miss = sum(keys==0&SameDiff=="S"),
HitRate =sum(keys==1&SameDiff=="S")/sum(SameDiff=="S"),
FARate = sum(keys==1&SameDiff=="D")/sum(SameDiff=="D"),
CRRate = sum(keys==0&SameDiff=="D")/sum(SameDiff=="D"),
MissRate = sum(keys==0&SameDiff=="S")/sum(SameDiff=="S"),
adjFARate = 1/(2*sum(SameDiff=="D")),
adjHitRate = 1-(1/(2*sum(SameDiff=="S"))),
d_p = qnorm(HitRate)-qnorm(FARate),
adjd_p=qnorm(adjHitRate)-qnorm(adjFARate))
head(basic)
basic$d_p[basic$FARate==0 | basic$HitRate==1]=
basic$adjd_p[basic$FARate==0 | basic$HitRate==1]
#Plotting
basic_longform = gather(basic, response_type, number_resp, HitRate,FARate,CRRate,MissRate)
head(basic_longform)
ggplot(basic_longform, aes(x = response_type, y = number_resp, color = response_type))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
labs(title="Proportaion response type", x = "response type", y = "proportion")+
plotformat
#d-p
ggplot(basic, aes(x = subID, y = d_p, color = as.factor(subID)))+
geom_point(size=3)+
labs(title="d prime", x = "subject", y = "d prime")+
plotformat
ggplot(basic,aes(d_p))+
geom_histogram()+
labs(title="d prime histogram", x = "d prime", y = "counts")+
plotformat
remain_dp = basic$subID[basic$d_p>d_p_thre]
sprintf("remove d prime lower than %f. Remain subjects: %i",d_p_thre, length(remain_dp))
totalData = totalData %>%filter(subID%in%remain_dp)
summarize = dplyr::summarize
#performance by sequence (first and second half of the experiment)
##
basicSequence = totalData %>% filter(keys>=0)%>% group_by(subID,sequence)%>% summarize(num_noresposnes = sum(keys==-1), num_same_resp = sum(keys==1), num_diff_resp = sum(keys==0), num_same_trials =sum(SameDiff=="S"), num_diff_trials = sum(SameDiff=="D"),
hit = sum(keys==1&SameDiff=="S"),
fa= sum(keys==1&SameDiff=="D"),
cr = sum(keys==0&SameDiff=="D"),
miss = sum(keys==0&SameDiff=="S"),
HitRate =sum(keys==1&SameDiff=="S")/sum(SameDiff=="S"),
FARate = sum(keys==1&SameDiff=="D")/sum(SameDiff=="D"),
CRRate = sum(keys==0&SameDiff=="D")/sum(SameDiff=="D"),
MissRate = sum(keys==0&SameDiff=="S")/sum(SameDiff=="S"),
adjFARate = 1/(2*sum(SameDiff=="D")),
adjHitRate = 1-(1/(2*sum(SameDiff=="S"))),
d_p = qnorm(HitRate)-qnorm(FARate),
adjd_p=qnorm(adjHitRate)-qnorm(adjFARate))
basicSequence
basicSequence$d_p[basicSequence$FARate==0 | basicSequence$HitRate==1]=
basicSequence$adjd_p[basicSequence$FARate==0 | basicSequence$HitRate==1]
#Plotting
basicSequence_longform = gather(basicSequence, response_type, response_rate, HitRate,FARate,CRRate,MissRate)
head(basicSequence_longform)
ggplot(basicSequence_longform, aes(x = response_type, y = response_rate, color = response_type))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
facet_wrap(~sequence)+
labs(title="Proportaion response type", x = "response type", y = "proportion")+
theme_facet()
#d-p
ggplot(basicSequence_longform, aes(x = subID, y = d_p, color = as.factor(subID)))+
geom_point(size=3)+
facet_wrap(~sequence)+
labs(title="d prime", x = "subject", y = "d prime")+
theme_facet()
ggplot(basicSequence_longform,aes(d_p))+
geom_histogram()+
facet_wrap(~sequence)+
labs(title="d prime histogram", x = "d prime", y = "counts")+
theme_facet()
summarize = dplyr::summarize
##########
basicFeature = totalData %>% filter(keys>=0, WAfeature=="W")%>% group_by(subID,FimgFeature)%>% summarize(num_noresposnes = sum(keys==-1), num_same_resp = sum(keys==1), num_diff_resp = sum(keys==0),
num_same_trials =sum(SameDiff=="S"), num_diff_trials = sum(SameDiff=="D"),
hit = sum(keys==1&SameDiff=="S"),
fa= sum(keys==1&SameDiff=="D"),
cr = sum(keys==0&SameDiff=="D"),
miss = sum(keys==0&SameDiff=="S"),
HitRate =sum(keys==1&SameDiff=="S")/sum(SameDiff=="S"),
FARate = sum(keys==1&SameDiff=="D")/sum(SameDiff=="D"),
CRRate = sum(keys==0&SameDiff=="D")/sum(SameDiff=="D"),
MissRate = sum(keys==0&SameDiff=="S")/sum(SameDiff=="S"),
adjFARate = 1/(2*sum(SameDiff=="D")),
adjHitRate = 1-(1/(2*sum(SameDiff=="S"))),
d_p = qnorm(HitRate)-qnorm(FARate),
adjd_p=qnorm(adjHitRate)-qnorm(adjFARate))
basicFeature$d_p[basicFeature$FARate==0 | basicFeature$HitRate==1]=
basicFeature$adjd_p[basicFeature$FARate==0 | basicFeature$HitRate==1]
###
basicFeature_longform = gather(basicFeature, response_type, number_resp, HitRate,FARate,CRRate,MissRate)
head(basicFeature_longform)
ggplot(basicFeature_longform, aes(x = response_type, y = number_resp, color = response_type))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
facet_wrap(~FimgFeature)+
labs(title="Proportaion response type by feature", x = "response type", y = "proportion")+
theme_facet()
ggplot(basicFeature, aes(x = subID, y = d_p, group = FimgFeature, color = FimgFeature))+
geom_point(size=3)+
facet_wrap(~FimgFeature)+
plotformat
###########
basicFeatureSequence = totalData %>% filter(keys>=0, WAfeature=="W")%>% group_by(subID,FimgFeature,sequence)%>% summarize(num_noresposnes = sum(keys==-1), num_same_resp = sum(keys==1), num_diff_resp = sum(keys==0),                      num_same_trials =sum(SameDiff=="S"), num_diff_trials = sum(SameDiff=="D"),
hit = sum(keys==1&SameDiff=="S"),
fa= sum(keys==1&SameDiff=="D"),
cr = sum(keys==0&SameDiff=="D"),
miss = sum(keys==0&SameDiff=="S"),
HitRate =sum(keys==1&SameDiff=="S")/sum(SameDiff=="S"),
FARate = sum(keys==1&SameDiff=="D")/sum(SameDiff=="D"),
CRRate = sum(keys==0&SameDiff=="D")/sum(SameDiff=="D"),
MissRate = sum(keys==0&SameDiff=="S")/sum(SameDiff=="S"),
adjFARate = 1/(2*sum(SameDiff=="D")),
adjHitRate = 1-(1/(2*sum(SameDiff=="S"))),
d_p = qnorm(HitRate)-qnorm(FARate),
adjd_p=qnorm(adjHitRate)-qnorm(adjFARate))
##adjust hit/fa rate
##FArate ==0 --> 1/(2N)
##Hitrate ==1 --> 1-1/(2N)
basicFeatureSequence$d_p[basicFeatureSequence$FARate==0 | basicFeatureSequence$HitRate==1]=
basicFeatureSequence$adjd_p[basicFeatureSequence$FARate==0 | basicFeatureSequence$HitRate==1]
###
basicFeatureSequence_longform = gather(basicFeatureSequence, response_type, number_resp, HitRate,FARate,CRRate,MissRate)
head(basicFeatureSequence_longform)
ggplot(basicFeatureSequence_longform, aes(x = response_type, y = number_resp, color = response_type))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
facet_wrap(sequence~FimgFeature)+
labs(title="Proportaion response type by feature", x = "response type", y = "proportion")+
theme_facet()
ggplot(basicFeatureSequence, aes(x = subID, y = d_p, group = FimgFeature, color = FimgFeature))+
geom_point(size=3)+
facet_wrap(sequence~FimgFeature)+
theme_facet()
library(dplyr)
library(plyr)
library(tidyr)
library(ggplot2)
library(stringr)
library(lme4)
library(lme4)
install.packages("lme4")
install.packages("nlme")
library(lme4)
install.packages("nlme")
version
install.packages("lme4", dependencies = TRUE)
library(lme4)
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load / install+load installr
install.packages("installr");
library(installr)
install.packages('devtools')
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
version
version
version
library(dplyr)
install.packages("dplyr")
