geom_hline(yintercept=42, linetype="dashed", color = "red", size=0.5)+
labs(title="No responses", x ="subjuect ID", y = "number of no responses")+
plotformat
library(dplyr)
library(plyr)
library(tidyr)
library(ggplot2)
library(stringr)
#plotting format
plotformat = theme(plot.title = element_text(face="bold",size = 17,hjust = 0.5),axis.title = element_text(face = "bold",size =15), axis.text.x = element_text(size=12), axis.title.y=element_text(size=14))+theme_bw()
theme_facet = function(base_size = 14, base_family = "Helvetica") {
# Starts with theme_grey and then modify some parts
theme_bw(base_size = base_size, base_family = base_family) %+replace%
theme(
strip.background = element_blank(),
strip.text.x = element_text(size = 10),
strip.text.y = element_text(size = 10),
axis.text.x = element_blank(),
axis.text.y = element_text(size=12,hjust=1),
axis.ticks =  element_blank(), #element_line(colour = "black"),
axis.title.x= element_text(size=12),
axis.title.y= element_text(size=12,angle=90),
panel.background = element_blank(),
panel.border =element_blank(),
panel.grid.minor = element_blank(),
panel.spacing = unit(0.5, "lines"),
plot.background = element_blank(),
plot.margin = unit(c(0.3,  0.3, 0.3, 0.3), "lines"),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5)
)
}
#color
Features = c('#deebf7','#9ecae1','#6baed6','#4292c6','#08519c','#08306b',
'#fee6ce','#fdae6b','#fd8d3c','#f16913','#a63603','#7f2704',
'#f0f0f0','#bdbdbd','#969696','#737373','#252525','#000000',
'#efedf5','#bcbddc','#9e9ac8','#807dba','#54278f','#3f007d')
dataPath = '/Volumes/Macintosh HD/Users/Pam_sf_wang/Documents/AMTdata/Calibration_NewDesign_005/';
SameDifferent_fnames = list.files(path = dataPath,pattern = "SameDifferent")
Demo_fnames = list.files(path = dataPath,pattern = "demographics")
##specify variables
#for behavior information
completeFnames =list()
totalData = data.frame()
ic = 1;
#for demographic information
gender = data.frame()
age = data.frame()
ethnicity= data.frame()
race = data.frame()
subID = data.frame()
##
for (ifiles in 1:length(SameDifferent_fnames)){
tempFile = read.table(paste0(dataPath,SameDifferent_fnames[ifiles]),header = F)
Trials = unlist(strsplit(as.character(tempFile$V1), ";"))
if (length(Trials)>10){
keyNum = data.frame()
accuracy = data.frame()
feature_index = data.frame()
RT = data.frame()
Fir_img = data.frame()
Sec_img = data.frame()
for (i in 1:length(Trials)){
temp = unlist(strsplit(Trials[i],","));
keyNum = rbind(keyNum,as.numeric(temp[2]))
accuracy = rbind(accuracy,as.numeric(temp[4]))
RT = rbind(RT,as.numeric(temp[5]))
feature_index = rbind(feature_index,as.numeric(temp[6]))
Fir_img = rbind(Fir_img,as.numeric(temp[7]))
Sec_img = rbind(Sec_img,as.numeric(temp[8]))
}
data = cbind(keyNum,accuracy,RT, feature_index,Fir_img,Sec_img)
colnames(data) = c("keys","accuracy", "rt","feature_index", "Fimg","Simg")
data = data[-1,]
data$subID = ifiles;
data$trialNum = 1:dim(data)[1];
totalData = rbind(totalData,data)
#subject ID for completing the tasks
for (ifilesDe in 1:length(Demo_fnames)){
if (unlist(strsplit(SameDifferent_fnames[ifiles],"SameDifferent"))[2]==unlist(strsplit(Demo_fnames[ifilesDe],"demographics"))[2]){
tempDemoFile = read.table(paste0(dataPath,Demo_fnames[ifilesDe]),header = F)
Demo_info = unlist(strsplit(as.character(tempDemoFile$V1), ";"))
gender[ic,1] = unlist(Demo_info[1])
age[ic,1]=unlist(Demo_info[2])
ethnicity[ic,1]=unlist(Demo_info[3])
race[ic,1]=unlist(Demo_info[4])
subID[ic,1]=unlist(ifiles)
}
completeFnames[ic] =unlist(strsplit(SameDifferent_fnames[ifiles],"SameDifferent"))[2]}
ic = ic+1;
}else{
}
}
demographic_information = cbind(gender,age,ethnicity,race,subID)
colnames(demographic_information) = c("Gender","Age","Ethnicity","Race","SubID")
demographic_information$Age = as.numeric(demographic_information$Age)
summarize = dplyr::summarize
#check basic performance -- remove non-responding subjects
temp = totalData %>% group_by(subID) %>% summarize(num_noresponses= sum(keys==-1), trialNum = length(subID))
sprintf("total trial number: %i; Number of subjects %i",temp$trialNum[1],dim(temp)[1])
temp
ggplot(temp, aes( y= num_noresponses, x= subID))+
geom_point()+
geom_hline(yintercept=42, linetype="dashed", color = "red", size=0.5)+
labs(title="No responses", x ="subjuect ID", y = "number of no responses")+
plotformat
#check feature number
tempFeature = totalData %>% group_by(subID) %>%summarize(feature = feature_index[1])
sprintf("Feature 1: %i; Feature 2: %i; Feature 3: %i",sum(tempFeature$feature==1),sum(tempFeature$feature==2),sum(tempFeature$feature==3))
#no response subjects
removeSub = temp$subID[temp$num_noresponses>42]
totalData = totalData%>%filter(!subID %in% removeSub)
demographic_information = demographic_information%>%filter(!SubID %in%removeSub)
sprintf("remove subjects %i",length(removeSub))
dim(totalData)
unique(totalData$subID)
genderCount = table(demographic_information$Gender)
EthnicityCount = table(demographic_information$Ethnicity)
RaceCount = table(demographic_information$Race)
genderCount
EthnicityCount
RaceCount
summary(demographic_information$Age)
ggplot(demographic_information, aes(demographic_information$Age)) +
geom_histogram()+
geom_vline(xintercept=median(demographic_information$Age), linetype="dashed", color = "red", size=0.5)+
#geom_vline(xintercept=mean(demographic_information$Age), linetype="dashed", color = "blue", size=0.5)+
labs(title = "Age Distribution",x = "age", y = "counts")+
plotformat
demographic_information$Age
is.na(demographic_information$Age)
genderCount = table(demographic_information$Gender)
EthnicityCount = table(demographic_information$Ethnicity)
RaceCount = table(demographic_information$Race)
genderCount
EthnicityCount
RaceCount
summary(demographic_information$Age)
ggplot(filter(demographic_information,!is.na(Age)), aes(demographic_information$Age)) +
geom_histogram()+
geom_vline(xintercept=median(demographic_information$Age), linetype="dashed", color = "red", size=0.5)+
#geom_vline(xintercept=mean(demographic_information$Age), linetype="dashed", color = "blue", size=0.5)+
labs(title = "Age Distribution",x = "age", y = "counts")+
plotformat
genderCount = table(demographic_information$Gender)
EthnicityCount = table(demographic_information$Ethnicity)
RaceCount = table(demographic_information$Race)
genderCount
EthnicityCount
RaceCount
summary(demographic_information$Age)
ggplot(filter(demographic_information), aes(demographic_information$Age)) +
geom_histogram()+
geom_vline(xintercept=median(demographic_information$Age), linetype="dashed", color = "red", size=0.5)+
#geom_vline(xintercept=mean(demographic_information$Age), linetype="dashed", color = "blue", size=0.5)+
labs(title = "Age Distribution",x = "age", y = "counts")+
plotformat
library(dplyr)
library(plyr)
library(tidyr)
library(ggplot2)
library(stringr)
#plotting format
plotformat = theme(plot.title = element_text(face="bold",size = 17,hjust = 0.5),axis.title = element_text(face = "bold",size =15), axis.text.x = element_text(size=12), axis.title.y=element_text(size=14))+theme_bw()
theme_facet = function(base_size = 14, base_family = "Helvetica") {
# Starts with theme_grey and then modify some parts
theme_bw(base_size = base_size, base_family = base_family) %+replace%
theme(
strip.background = element_blank(),
strip.text.x = element_text(size = 10),
strip.text.y = element_text(size = 10),
axis.text.x = element_blank(),
axis.text.y = element_text(size=12,hjust=1),
axis.ticks =  element_blank(), #element_line(colour = "black"),
axis.title.x= element_text(size=12),
axis.title.y= element_text(size=12,angle=90),
panel.background = element_blank(),
panel.border =element_blank(),
panel.grid.minor = element_blank(),
panel.spacing = unit(0.5, "lines"),
plot.background = element_blank(),
plot.margin = unit(c(0.3,  0.3, 0.3, 0.3), "lines"),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5)
)
}
#color
Features = c('#deebf7','#9ecae1','#6baed6','#4292c6','#08519c','#08306b',
'#fee6ce','#fdae6b','#fd8d3c','#f16913','#a63603','#7f2704',
'#f0f0f0','#bdbdbd','#969696','#737373','#252525','#000000',
'#efedf5','#bcbddc','#9e9ac8','#807dba','#54278f','#3f007d')
dataPath = '/Volumes/Macintosh HD/Users/Pam_sf_wang/Documents/AMTdata/Calibration_NewDesign_006/';
SameDifferent_fnames = list.files(path = dataPath,pattern = "SameDifferent")
Demo_fnames = list.files(path = dataPath,pattern = "demographics")
##specify variables
#for behavior information
completeFnames =list()
totalData = data.frame()
ic = 1;
#for demographic information
gender = data.frame()
age = data.frame()
ethnicity= data.frame()
race = data.frame()
subID = data.frame()
##
for (ifiles in 1:length(SameDifferent_fnames)){
tempFile = read.table(paste0(dataPath,SameDifferent_fnames[ifiles]),header = F)
Trials = unlist(strsplit(as.character(tempFile$V1), ";"))
if (length(Trials)>10){
keyNum = data.frame()
accuracy = data.frame()
feature_index = data.frame()
RT = data.frame()
Fir_img = data.frame()
Sec_img = data.frame()
for (i in 1:length(Trials)){
temp = unlist(strsplit(Trials[i],","));
keyNum = rbind(keyNum,as.numeric(temp[2]))
accuracy = rbind(accuracy,as.numeric(temp[4]))
RT = rbind(RT,as.numeric(temp[5]))
feature_index = rbind(feature_index,as.numeric(temp[6]))
Fir_img = rbind(Fir_img,as.numeric(temp[7]))
Sec_img = rbind(Sec_img,as.numeric(temp[8]))
}
data = cbind(keyNum,accuracy,RT, feature_index,Fir_img,Sec_img)
colnames(data) = c("keys","accuracy", "rt","feature_index", "Fimg","Simg")
data = data[-1,]
data$subID = ifiles;
data$trialNum = 1:dim(data)[1];
totalData = rbind(totalData,data)
#subject ID for completing the tasks
for (ifilesDe in 1:length(Demo_fnames)){
if (unlist(strsplit(SameDifferent_fnames[ifiles],"SameDifferent"))[2]==unlist(strsplit(Demo_fnames[ifilesDe],"demographics"))[2]){
tempDemoFile = read.table(paste0(dataPath,Demo_fnames[ifilesDe]),header = F)
Demo_info = unlist(strsplit(as.character(tempDemoFile$V1), ";"))
gender[ic,1] = unlist(Demo_info[1])
age[ic,1]=unlist(Demo_info[2])
ethnicity[ic,1]=unlist(Demo_info[3])
race[ic,1]=unlist(Demo_info[4])
subID[ic,1]=unlist(ifiles)
}
completeFnames[ic] =unlist(strsplit(SameDifferent_fnames[ifiles],"SameDifferent"))[2]}
ic = ic+1;
}else{
}
}
demographic_information = cbind(gender,age,ethnicity,race,subID)
colnames(demographic_information) = c("Gender","Age","Ethnicity","Race","SubID")
demographic_information$Age = as.numeric(demographic_information$Age)
summarize = dplyr::summarize
#check basic performance -- remove non-responding subjects
temp = totalData %>% group_by(subID) %>% summarize(num_noresponses= sum(keys==-1), trialNum = length(subID))
sprintf("total trial number: %i; Number of subjects %i",temp$trialNum[1],dim(temp)[1])
temp
ggplot(temp, aes( y= num_noresponses, x= subID))+
geom_point()+
geom_hline(yintercept=42, linetype="dashed", color = "red", size=0.5)+
labs(title="No responses", x ="subjuect ID", y = "number of no responses")+
plotformat
#check feature number
tempFeature = totalData %>% group_by(subID) %>%summarize(feature = feature_index[1])
sprintf("Feature 1: %i; Feature 2: %i; Feature 3: %i",sum(tempFeature$feature==1),sum(tempFeature$feature==2),sum(tempFeature$feature==3))
#no response subjects
removeSub = temp$subID[temp$num_noresponses>42]
totalData = totalData%>%filter(!subID %in% removeSub)
demographic_information = demographic_information%>%filter(!SubID %in%removeSub)
sprintf("remove subjects %i",length(removeSub))
genderCount = table(demographic_information$Gender)
EthnicityCount = table(demographic_information$Ethnicity)
RaceCount = table(demographic_information$Race)
genderCount
EthnicityCount
RaceCount
summary(demographic_information$Age)
ggplot(demographic_information, aes(demographic_information$Age)) +
geom_histogram()+
geom_vline(xintercept=median(demographic_information$Age), linetype="dashed", color = "red", size=0.5)+
#geom_vline(xintercept=mean(demographic_information$Age), linetype="dashed", color = "blue", size=0.5)+
labs(title = "Age Distribution",x = "age", y = "counts")+
plotformat
#select right age
remainSub = demographic_information$SubID[demographic_information$Age<35]
demographic_information_remain = filter(demographic_information,SubID%in%remainSub)
summary(demographic_information_remain$Age)
ggplot(demographic_information_remain, aes(Age)) +
geom_histogram()+
geom_vline(xintercept=median(demographic_information_remain$Age), linetype="dashed", color = "red", size=0.5)+
#geom_vline(xintercept=mean(demographic_information$Age), linetype="dashed", color = "blue", size=0.5)+
labs(title = "Age Distribution",x = "age", y = "counts")+
plotformat
genderCount = table(demographic_information_remain$Gender)
EthnicityCount = table(demographic_information_remain$Ethnicity)
RaceCount = table(demographic_information_remain$Race)
genderCount
EthnicityCount
RaceCount
totalData = totalData %>%filter(subID %in%remainSub)
temp = totalData %>% group_by(subID) %>% summarize(num_noresponses= sum(keys==-1), trialNum = length(subID))
sprintf("total trial number: %i; Number of subjects %i",temp$trialNum[1],dim(temp)[1])
temp
ggplot(temp, aes( y= num_noresponses, x= subID))+
geom_point()+
geom_hline(yintercept=42, linetype="dashed", color = "red", size=0.5)+
labs(title="No responses", x ="subjuect ID", y = "number of no responses")+
plotformat
#check feature number
tempFeature = totalData %>% group_by(subID) %>%summarize(feature = feature_index[1])
sprintf("Feature 1: %i; Feature 2: %i; Feature 3: %i",sum(tempFeature$feature==1),sum(tempFeature$feature==2),sum(tempFeature$feature==3))
summarize = dplyr::summarize
completeFnames = unlist(completeFnames)
#trial conditions: different:0; same:1 (same as keys)
totalData$cond = NA;
totalData$cond[totalData$Fimg==totalData$Simg]=1;
totalData$cond[totalData$Fimg!=totalData$Simg]=0;
totalData$level_diff = abs(totalData$Simg-totalData$Fimg);
#Assign pair identity (ignore order)
totalData$pairIdentity = NA;
totalData$pairIdentity[totalData$cond==1&totalData$Fimg==1]=1
totalData$pairIdentity[totalData$cond==1&totalData$Fimg==2]=2
totalData$pairIdentity[totalData$cond==1&totalData$Fimg==3]=3
totalData$pairIdentity[totalData$cond==1&totalData$Fimg==4]=4
totalData$pairIdentity[totalData$cond==1&totalData$Fimg==5]=5
totalData$pairIdentity[totalData$cond==1&totalData$Fimg==6]=6
totalData$pairIdentity[totalData$cond==1&totalData$Fimg==7]=7
totalData$pairIdentity[totalData$Fimg==1&totalData$Simg==2]=12
totalData$pairIdentity[totalData$Fimg==2&totalData$Simg==1]=12
totalData$pairIdentity[totalData$Fimg==1&totalData$Simg==3]=13
totalData$pairIdentity[totalData$Fimg==3&totalData$Simg==1]=13
totalData$pairIdentity[totalData$Fimg==1&totalData$Simg==4]=14
totalData$pairIdentity[totalData$Fimg==4&totalData$Simg==1]=14
totalData$pairIdentity[totalData$Fimg==1&totalData$Simg==5]=15
totalData$pairIdentity[totalData$Fimg==5&totalData$Simg==1]=15
totalData$pairIdentity[totalData$Fimg==1&totalData$Simg==6]=16
totalData$pairIdentity[totalData$Fimg==6&totalData$Simg==1]=16
totalData$pairIdentity[totalData$Fimg==1&totalData$Simg==7]=17
totalData$pairIdentity[totalData$Fimg==7&totalData$Simg==1]=17
totalData$pairIdentity[totalData$Fimg==2&totalData$Simg==3]=23
totalData$pairIdentity[totalData$Fimg==3&totalData$Simg==2]=23
totalData$pairIdentity[totalData$Fimg==2&totalData$Simg==4]=24
totalData$pairIdentity[totalData$Fimg==4&totalData$Simg==2]=24
totalData$pairIdentity[totalData$Fimg==2&totalData$Simg==5]=25
totalData$pairIdentity[totalData$Fimg==5&totalData$Simg==2]=25
totalData$pairIdentity[totalData$Fimg==2&totalData$Simg==6]=26
totalData$pairIdentity[totalData$Fimg==6&totalData$Simg==2]=26
totalData$pairIdentity[totalData$Fimg==2&totalData$Simg==7]=27
totalData$pairIdentity[totalData$Fimg==7&totalData$Simg==2]=27
totalData$pairIdentity[totalData$Fimg==3&totalData$Simg==4]=34
totalData$pairIdentity[totalData$Fimg==4&totalData$Simg==3]=34
totalData$pairIdentity[totalData$Fimg==3&totalData$Simg==5]=35
totalData$pairIdentity[totalData$Fimg==5&totalData$Simg==3]=35
totalData$pairIdentity[totalData$Fimg==3&totalData$Simg==6]=36
totalData$pairIdentity[totalData$Fimg==6&totalData$Simg==3]=36
totalData$pairIdentity[totalData$Fimg==3&totalData$Simg==7]=37
totalData$pairIdentity[totalData$Fimg==7&totalData$Simg==3]=37
totalData$pairIdentity[totalData$Fimg==4&totalData$Simg==5]=45
totalData$pairIdentity[totalData$Fimg==5&totalData$Simg==4]=45
totalData$pairIdentity[totalData$Fimg==4&totalData$Simg==6]=46
totalData$pairIdentity[totalData$Fimg==6&totalData$Simg==4]=46
totalData$pairIdentity[totalData$Fimg==4&totalData$Simg==7]=47
totalData$pairIdentity[totalData$Fimg==7&totalData$Simg==4]=47
totalData$pairIdentity[totalData$Fimg==5&totalData$Simg==6]=56
totalData$pairIdentity[totalData$Fimg==6&totalData$Simg==5]=56
totalData$pairIdentity[totalData$Fimg==5&totalData$Simg==7]=57
totalData$pairIdentity[totalData$Fimg==7&totalData$Simg==5]=57
totalData$pairIdentity[totalData$Fimg==6&totalData$Simg==7]=67
totalData$pairIdentity[totalData$Fimg==7&totalData$Simg==6]=67
totalData$pairIdentity = as.factor(totalData$pairIdentity)
summarize = dplyr::summarize
#Times
TimesRT = totalData %>% group_by(subID,pairIdentity,feature_index,cond)%>%summarize(Frt = rt[1],Srt = rt[2], Trt = rt[3], Ftrial = trialNum[1],Strial = trialNum[2],Ttrial = trialNum[3])
TimesRT_long = gather(TimesRT, response_type, number_resp,Frt,Srt,Trt)
ggplot(subset(TimesRT_long, cond==1), aes(x = pairIdentity, y = number_resp, group = pairIdentity, color = as.factor(pairIdentity)))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
ylim(0,2500)+
facet_wrap(response_type~feature_index)+
labs(title="Same", x = "level", y = "RT")+
plotformat
ggplot(subset(TimesRT_long, cond==0), aes(x = pairIdentity, y = number_resp, group = pairIdentity, color = as.factor(pairIdentity)))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
facet_wrap(response_type~feature_index)+
labs(title="Different", x = "Same level", y = "RT")+
plotformat
TimesRTcorrect = totalData %>% group_by(subID,pairIdentity,feature_index,cond)%>%filter(accuracy==1) %>%summarize(Frt = rt[1],Srt = rt[2], Trt = rt[3], Ftrial = trialNum[1],Strial = trialNum[2],Ttrial = trialNum[3])
TimesRTcorrect_long = gather(TimesRTcorrect, response_type, number_resp,Frt,Srt,Trt)
ggplot(subset(TimesRTcorrect_long, cond==1), aes(x = pairIdentity, y = number_resp, group = pairIdentity, color = as.factor(pairIdentity)))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
facet_wrap(response_type~feature_index)+
labs(title="Correct same", x = "Same level", y = "RT")+
plotformat
ggplot(subset(TimesRTcorrect_long, cond==0), aes(x = pairIdentity, y = number_resp, group = pairIdentity, color = as.factor(pairIdentity)))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
facet_wrap(response_type~feature_index,strip.position = 'bottom')+
labs(title="Correct different", x = "Same level", y = "RT")+
theme_facet()
summarize = dplyr::summarize
basic = totalData %>% filter(keys>=0)%>% group_by(subID)%>% summarize(num_noresposnes = sum(keys==-1), num_same_resp = sum(keys==1), num_diff_resp = sum(keys==0), num_same_trials =sum(cond==1), num_diff_trials = sum(cond==0),
hit = sum(keys==1&cond==1),
fa= sum(keys==1&cond==0),
cr = sum(keys==0&cond==0),
miss = sum(keys==0&cond==1),
HitRate =sum(keys==1&cond==1)/sum(cond==1),
FARate = sum(keys==1&cond==0)/sum(cond==0),
CRRate = sum(keys==0&cond==0)/sum(cond==0),
MissRate = sum(keys==0&cond==1)/sum(cond==1),
d_p = qnorm(HitRate)-qnorm(FARate))
basic
#plotting
basic_longform = gather(basic, response_type, number_resp, HitRate,FARate,CRRate,MissRate)
head(basic_longform)
ggplot(basic_longform, aes(x = response_type, y = number_resp, color = response_type))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
labs(title="Proportaion response type", x = "response type", y = "proportion")+
plotformat
##########
basicFeature = totalData %>% filter(keys>=0)%>% group_by(subID,feature_index)%>% summarize(num_noresposnes = sum(keys==-1), num_same_resp = sum(keys==1), num_diff_resp = sum(keys==0), num_same_trials =sum(cond==1), num_diff_trials = sum(cond==0),
hit = sum(keys==1&cond==1),
fa= sum(keys==1&cond==0),
cr = sum(keys==0&cond==0),
miss = sum(keys==0&cond==1),
HitRate =sum(keys==1&cond==1)/sum(cond==1),
FARate = sum(keys==1&cond==0)/sum(cond==0),
CRRate = sum(keys==0&cond==0)/sum(cond==0),
MissRate = sum(keys==0&cond==1)/sum(cond==1),
d_p = qnorm(HitRate)-qnorm(FARate))
basicFeature_longform = gather(basicFeature, response_type, number_resp, HitRate,FARate,CRRate,MissRate)
head(basicFeature_longform)
ggplot(basicFeature_longform, aes(x = response_type, y = number_resp, color = response_type))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
facet_wrap(~feature_index)+
labs(title="Proportaion response type by feature", x = "response type", y = "proportion")+
plotformat
###########
basicLevel = totalData %>% filter(keys>=0)%>% group_by(subID,level_diff)%>% summarize(num_noresposnes = sum(keys==-1), num_same_resp = sum(keys==1), num_diff_resp = sum(keys==0), num_same_trials =sum(cond==1), num_diff_trials = sum(cond==0),
hit = sum(keys==1&cond==1),
fa= sum(keys==1&cond==0),
cr = sum(keys==0&cond==0),
miss = sum(keys==0&cond==1),
HitRate =sum(keys==1&cond==1)/sum(cond==1),
FARate = sum(keys==1&cond==0)/sum(cond==0),
CRRate = sum(keys==0&cond==0)/sum(cond==0),
MissRate = sum(keys==0&cond==1)/sum(cond==1),
d_p = qnorm(HitRate)-qnorm(FARate))
basicLevel_longform = gather(basicLevel, response_type, number_resp, HitRate,FARate,CRRate,MissRate)
head(basicLevel_longform)
ggplot(basicLevel_longform, aes(x = response_type, y = number_resp, color = response_type))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
facet_wrap(~level_diff,nrow = 1)+
labs(title="Proportaion response type by difficulty level", x = "response type", y = "proportion")+
theme_facet()
###########
basicLevelFeature = totalData %>% filter(keys>=0)%>% group_by(subID,level_diff,feature_index)%>% summarize(num_noresposnes = sum(keys==-1), num_same_resp = sum(keys==1), num_diff_resp = sum(keys==0), num_same_trials =sum(cond==1), num_diff_trials = sum(cond==0),
hit = sum(keys==1&cond==1),
fa= sum(keys==1&cond==0),
cr = sum(keys==0&cond==0),
miss = sum(keys==0&cond==1),
HitRate =sum(keys==1&cond==1)/sum(cond==1),
FARate = sum(keys==1&cond==0)/sum(cond==0),
CRRate = sum(keys==0&cond==0)/sum(cond==0),
MissRate = sum(keys==0&cond==1)/sum(cond==1),
d_p = qnorm(HitRate)-qnorm(FARate))
basicLevelFeature_longform = gather(basicLevelFeature, response_type, number_resp, HitRate,FARate,CRRate,MissRate)
head(basicLevelFeature_longform)
ggplot(basicLevelFeature_longform, aes(x = response_type, y = number_resp, color = response_type))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
facet_wrap(feature_index~level_diff,nrow = 3,strip.position = "bottom")+
labs(title="Proportaion response type by difficulty level", x = "level diff", y = "proportion")+
theme_facet()
head(basicLevel)
basicLevel$d_p
basicLevel = totalData %>% filter(keys>=0)%>% group_by(subID,level_diff)%>% summarize(num_noresposnes = sum(keys==-1), num_same_resp = sum(keys==1), num_diff_resp = sum(keys==0), num_same_trials =sum(cond==1), num_diff_trials = sum(cond==0),
hit = sum(keys==1&cond==1),
fa= sum(keys==1&cond==0),
cr = sum(keys==0&cond==0),
miss = sum(keys==0&cond==1),
HitRate =sum(keys==1&cond==1)/sum(cond==1),
FARate = sum(keys==1&cond==0)/sum(cond==0),
CRRate = sum(keys==0&cond==0)/sum(cond==0),
MissRate = sum(keys==0&cond==1)/sum(cond==1),
d_p = qnorm(CRRate)-qnorm(FARate))
basicLevel$d_p
basic$d_p
head(basic)
ggplot(basic, aes(x = subID, y = d_p, color = subID))+
geom_boxplot(fill = "white",lwd = 1)+
geom_jitter(width=0.2,alpha = 0.5)+
labs(title="d prime", x = "subject", y = "d prime")+
plotformat
ggplot(basic, aes(x = subID, y = d_p, color = as.factor(subID)))+
geom_point(alpha = 0.5)+
labs(title="d prime", x = "subject", y = "d prime")+
plotformat
ggplot(basic, aes(x = subID, y = d_p, color = as.factor(subID)))+
geom_point()+
labs(title="d prime", x = "subject", y = "d prime")+
plotformat
ggplot(basic, aes(x = subID, y = d_p, color = as.factor(subID)))+
geom_point(size=2)+
labs(title="d prime", x = "subject", y = "d prime")+
plotformat
ggplot(basic, aes(x = subID, y = d_p, color = as.factor(subID)))+
geom_point(size=3)+
labs(title="d prime", x = "subject", y = "d prime")+
plotformat
